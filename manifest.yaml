apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: spring-boot-k8s
spec:
  selector:
    matchLabels:
      app: spring-boot-k8s
  replicas: 2 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: spring-boot-k8s
    spec:
      containers:
        - name: spring-boot-k8s
          image: acrazewtmaeu0001dapodm.azurecr.io/springboot-k8s-yaml-main:1.0 # Image that will be used to containers in the cluster
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080 # The port that the container is running on in the cluster
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      imagePullSecrets:
        - name: acrazewtmaeu0001dapodm

---

apiVersion: v1
kind: Service
metadata:
  name: springboot-k8s-svc
spec:
  type: NodePort
  selector:
    app: spring-boot-k8s
  ports:
   - protocol: TCP
     port: 8080
     name: springboot-k8s-svc-https
     targetPort: 8080
---


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spring-boot-k8s-ingress
spec:
  tls:
  - hosts:
    - spring-app.maersk-digital.net
    secretName: tls-wildcard-maersk-digital-net

  ingressClassName: nginx
  rules:
  - host: spring-app.maersk-digital.net
    http:
      paths:
      - backend:
          service:
            name: springboot-k8s-svc
            port:
              number: 8080
        path: /
        pathType: ImplementationSpecific

---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: spring-boot-k8s-network-policy
spec:
  podSelector:
    matchLabels:
      app: spring-boot-k8s
  ingress:
  # Allow web access to the UI
  - ports:
    - port: 8080
  egress:
  - {}
